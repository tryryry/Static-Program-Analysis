<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="pascal.taie.analysis.pta.CSPTATest" tests="13" skipped="0" failures="13" errors="0" timestamp="2021-11-20T11:20:33" hostname="DESKTOP-I64H15I" time="25.089">
  <properties/>
  <testcase name="testStoreLoad" classname="pascal.taie.analysis.pta.CSPTATest" time="3.991">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/a1, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/a2, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/b1, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/b2, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}.f, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/a1, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/a2, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/b1, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/b2, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;StoreLoad: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[0@L4] new A}.f, expected: [[]:NewObj{&lt;StoreLoad: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testStoreLoad(CSPTATest.java:34)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testOneCall" classname="pascal.taie.analysis.pta.CSPTATest" time="1.777">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[&lt;C: void &lt;init&gt;()&gt;[0@L8] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null&#10;[&lt;C: void m()&gt;[10@L16] temp$4 = invokeinterface x.get()]:&lt;One: int get()&gt;/%this, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null&#10;[&lt;C: void m()&gt;[10@L16] temp$4 = invokeinterface x.get()]:&lt;One: int get()&gt;/temp$0, expected: [], given: null&#10;[&lt;C: void m()&gt;[1@L12] invokespecial temp$0.&lt;init&gt;()]:&lt;One: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null&#10;[&lt;C: void m()&gt;[4@L13] invokespecial temp$1.&lt;init&gt;()]:&lt;Two: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null&#10;[&lt;C: void m()&gt;[6@L14] temp$2 = invokevirtual %this.id(n1)]:&lt;C: Number id(Number)&gt;/%this, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null&#10;[&lt;C: void m()&gt;[6@L14] temp$2 = invokevirtual %this.id(n1)]:&lt;C: Number id(Number)&gt;/n, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null&#10;[&lt;C: void m()&gt;[8@L15] temp$3 = invokevirtual %this.id(n2)]:&lt;C: Number id(Number)&gt;/%this, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null&#10;[&lt;C: void m()&gt;[8@L15] temp$3 = invokevirtual %this.id(n2)]:&lt;C: Number id(Number)&gt;/n, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null&#10;[&lt;One: void &lt;init&gt;()&gt;[0@L34] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[1@L3] invokespecial temp$0.&lt;init&gt;()]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/%this, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/i, expected: [], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/n1, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/n2, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/temp$0, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/temp$1, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/temp$2, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/temp$3, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/temp$4, expected: [], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/x, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null&#10;[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/y, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null&#10;[&lt;Two: void &lt;init&gt;()&gt;[0@L40] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null&#10;[]:&lt;OneCall: void main(java.lang.String[])&gt;/c, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null&#10;[]:&lt;OneCall: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[&lt;C: void &lt;init&gt;()&gt;[0@L8] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null
[&lt;C: void m()&gt;[10@L16] temp$4 = invokeinterface x.get()]:&lt;One: int get()&gt;/%this, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null
[&lt;C: void m()&gt;[10@L16] temp$4 = invokeinterface x.get()]:&lt;One: int get()&gt;/temp$0, expected: [], given: null
[&lt;C: void m()&gt;[1@L12] invokespecial temp$0.&lt;init&gt;()]:&lt;One: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null
[&lt;C: void m()&gt;[4@L13] invokespecial temp$1.&lt;init&gt;()]:&lt;Two: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null
[&lt;C: void m()&gt;[6@L14] temp$2 = invokevirtual %this.id(n1)]:&lt;C: Number id(Number)&gt;/%this, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null
[&lt;C: void m()&gt;[6@L14] temp$2 = invokevirtual %this.id(n1)]:&lt;C: Number id(Number)&gt;/n, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null
[&lt;C: void m()&gt;[8@L15] temp$3 = invokevirtual %this.id(n2)]:&lt;C: Number id(Number)&gt;/%this, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null
[&lt;C: void m()&gt;[8@L15] temp$3 = invokevirtual %this.id(n2)]:&lt;C: Number id(Number)&gt;/n, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null
[&lt;One: void &lt;init&gt;()&gt;[0@L34] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[1@L3] invokespecial temp$0.&lt;init&gt;()]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/%this, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/i, expected: [], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/n1, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/n2, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/temp$0, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/temp$1, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/temp$2, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/temp$3, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/temp$4, expected: [], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/x, expected: [[]:NewObj{&lt;C: void m()&gt;[0@L12] new One}], given: null
[&lt;OneCall: void main(java.lang.String[])&gt;[3@L4] invokevirtual c.m()]:&lt;C: void m()&gt;/y, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null
[&lt;Two: void &lt;init&gt;()&gt;[0@L40] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;C: void m()&gt;[3@L13] new Two}], given: null
[]:&lt;OneCall: void main(java.lang.String[])&gt;/c, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null
[]:&lt;OneCall: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;OneCall: void main(java.lang.String[])&gt;[0@L3] new C}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testOneCall(CSPTATest.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testOneType" classname="pascal.taie.analysis.pta.CSPTATest" time="1.567">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[A]:&lt;C: D get()&gt;/%this, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}], given: null&#10;[A]:&lt;C: D get()&gt;/temp$0, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null&#10;[A]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}, []:NewObj{&lt;A: void m()&gt;[6@L12] new C}], given: null&#10;[A]:&lt;C: void set(D)&gt;/%this, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}, []:NewObj{&lt;A: void m()&gt;[6@L12] new C}], given: null&#10;[A]:&lt;C: void set(D)&gt;/p, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null&#10;[A]:&lt;D: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null&#10;[A]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}, []:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[6@L12] new C}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null&#10;[B]:&lt;C: D get()&gt;/%this, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}], given: null&#10;[B]:&lt;C: D get()&gt;/temp$0, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null&#10;[B]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}], given: null&#10;[B]:&lt;C: void set(D)&gt;/%this, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}], given: null&#10;[B]:&lt;C: void set(D)&gt;/p, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null&#10;[B]:&lt;D: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null&#10;[B]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}, []:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null&#10;[OneType]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[0@L3] new A}], given: null&#10;[OneType]:&lt;A: void m()&gt;/%this, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[0@L3] new A}], given: null&#10;[OneType]:&lt;A: void m()&gt;/c1, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}], given: null&#10;[OneType]:&lt;A: void m()&gt;/c2, expected: [[]:NewObj{&lt;A: void m()&gt;[6@L12] new C}], given: null&#10;[OneType]:&lt;A: void m()&gt;/temp$0, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}], given: null&#10;[OneType]:&lt;A: void m()&gt;/temp$1, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}], given: null&#10;[OneType]:&lt;A: void m()&gt;/temp$2, expected: [[]:NewObj{&lt;A: void m()&gt;[6@L12] new C}], given: null&#10;[OneType]:&lt;A: void m()&gt;/temp$3, expected: [[]:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null&#10;[OneType]:&lt;A: void m()&gt;/temp$4, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null&#10;[OneType]:&lt;A: void m()&gt;/x, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null&#10;[OneType]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[3@L4] new B}], given: null&#10;[OneType]:&lt;B: void m()&gt;/%this, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[3@L4] new B}], given: null&#10;[OneType]:&lt;B: void m()&gt;/c3, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}], given: null&#10;[OneType]:&lt;B: void m()&gt;/temp$0, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}], given: null&#10;[OneType]:&lt;B: void m()&gt;/temp$1, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null&#10;[OneType]:&lt;B: void m()&gt;/temp$2, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null&#10;[OneType]:&lt;B: void m()&gt;/y, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null&#10;[OneType]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[0@L3] new A}, []:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[3@L4] new B}], given: null&#10;[]:&lt;OneType: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[0@L3] new A}], given: null&#10;[]:&lt;OneType: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[3@L4] new B}], given: null&#10;[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}.f, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null&#10;[]:NewObj{&lt;A: void m()&gt;[6@L12] new C}.f, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null&#10;[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}.f, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[A]:&lt;C: D get()&gt;/%this, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}], given: null
[A]:&lt;C: D get()&gt;/temp$0, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null
[A]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}, []:NewObj{&lt;A: void m()&gt;[6@L12] new C}], given: null
[A]:&lt;C: void set(D)&gt;/%this, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}, []:NewObj{&lt;A: void m()&gt;[6@L12] new C}], given: null
[A]:&lt;C: void set(D)&gt;/p, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null
[A]:&lt;D: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null
[A]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}, []:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[6@L12] new C}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null
[B]:&lt;C: D get()&gt;/%this, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}], given: null
[B]:&lt;C: D get()&gt;/temp$0, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null
[B]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}], given: null
[B]:&lt;C: void set(D)&gt;/%this, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}], given: null
[B]:&lt;C: void set(D)&gt;/p, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null
[B]:&lt;D: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null
[B]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}, []:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null
[OneType]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[0@L3] new A}], given: null
[OneType]:&lt;A: void m()&gt;/%this, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[0@L3] new A}], given: null
[OneType]:&lt;A: void m()&gt;/c1, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}], given: null
[OneType]:&lt;A: void m()&gt;/c2, expected: [[]:NewObj{&lt;A: void m()&gt;[6@L12] new C}], given: null
[OneType]:&lt;A: void m()&gt;/temp$0, expected: [[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}], given: null
[OneType]:&lt;A: void m()&gt;/temp$1, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}], given: null
[OneType]:&lt;A: void m()&gt;/temp$2, expected: [[]:NewObj{&lt;A: void m()&gt;[6@L12] new C}], given: null
[OneType]:&lt;A: void m()&gt;/temp$3, expected: [[]:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null
[OneType]:&lt;A: void m()&gt;/temp$4, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null
[OneType]:&lt;A: void m()&gt;/x, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null
[OneType]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[3@L4] new B}], given: null
[OneType]:&lt;B: void m()&gt;/%this, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[3@L4] new B}], given: null
[OneType]:&lt;B: void m()&gt;/c3, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}], given: null
[OneType]:&lt;B: void m()&gt;/temp$0, expected: [[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}], given: null
[OneType]:&lt;B: void m()&gt;/temp$1, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null
[OneType]:&lt;B: void m()&gt;/temp$2, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null
[OneType]:&lt;B: void m()&gt;/y, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null
[OneType]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[0@L3] new A}, []:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[3@L4] new B}], given: null
[]:&lt;OneType: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[0@L3] new A}], given: null
[]:&lt;OneType: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;OneType: void main(java.lang.String[])&gt;[3@L4] new B}], given: null
[]:NewObj{&lt;A: void m()&gt;[0@L10] new C}.f, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null
[]:NewObj{&lt;A: void m()&gt;[6@L12] new C}.f, expected: [[]:NewObj{&lt;A: void m()&gt;[3@L11] new D}, []:NewObj{&lt;A: void m()&gt;[9@L13] new D}], given: null
[]:NewObj{&lt;B: void m()&gt;[0@L20] new C}.f, expected: [[]:NewObj{&lt;B: void m()&gt;[3@L21] new D}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testOneType(CSPTATest.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testNew" classname="pascal.taie.analysis.pta.CSPTATest" time="1.639">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[3@L5] new B}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[6@L6] new C}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[9@L7] new C}], given: null&#10;[]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[6@L6] new C}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[9@L7] new C}], given: null&#10;[]:&lt;New: void main(java.lang.String[])&gt;/a, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;New: void main(java.lang.String[])&gt;/b1, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:&lt;New: void main(java.lang.String[])&gt;/b2, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[6@L6] new C}], given: null&#10;[]:&lt;New: void main(java.lang.String[])&gt;/c, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[9@L7] new C}], given: null&#10;[]:&lt;New: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;New: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:&lt;New: void main(java.lang.String[])&gt;/temp$2, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[6@L6] new C}], given: null&#10;[]:&lt;New: void main(java.lang.String[])&gt;/temp$3, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[9@L7] new C}], given: null&#10;[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[3@L5] new B}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[6@L6] new C}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[9@L7] new C}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[3@L5] new B}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[6@L6] new C}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[9@L7] new C}], given: null
[]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[6@L6] new C}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[9@L7] new C}], given: null
[]:&lt;New: void main(java.lang.String[])&gt;/a, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;New: void main(java.lang.String[])&gt;/b1, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:&lt;New: void main(java.lang.String[])&gt;/b2, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[6@L6] new C}], given: null
[]:&lt;New: void main(java.lang.String[])&gt;/c, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[9@L7] new C}], given: null
[]:&lt;New: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;New: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:&lt;New: void main(java.lang.String[])&gt;/temp$2, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[6@L6] new C}], given: null
[]:&lt;New: void main(java.lang.String[])&gt;/temp$3, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[9@L7] new C}], given: null
[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;New: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[3@L5] new B}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[6@L6] new C}, []:NewObj{&lt;New: void main(java.lang.String[])&gt;[9@L7] new C}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testNew(CSPTATest.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testTwoCall" classname="pascal.taie.analysis.pta.CSPTATest" time="1.65">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[&lt;C: void &lt;init&gt;()&gt;[0@L26] invokespecial %this.&lt;init&gt;(), &lt;B: void &lt;init&gt;()&gt;[0@L23] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null&#10;[&lt;TwoCall: void m()&gt;[1@L7] invokespecial temp$0.&lt;init&gt;(), &lt;A: void &lt;init&gt;()&gt;[0@L13] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null&#10;[&lt;TwoCall: void m()&gt;[4@L8] invokespecial temp$1.&lt;init&gt;(), &lt;B: void &lt;init&gt;()&gt;[0@L23] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null&#10;[&lt;TwoCall: void m()&gt;[5@L8] temp$2 = invokevirtual a.id(temp$1), &lt;A: B id(B)&gt;[0@L15] temp$0 = invokevirtual %this._id(b)]:&lt;A: B _id(B)&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null&#10;[&lt;TwoCall: void m()&gt;[5@L8] temp$2 = invokevirtual a.id(temp$1), &lt;A: B id(B)&gt;[0@L15] temp$0 = invokevirtual %this._id(b)]:&lt;A: B _id(B)&gt;/p, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null&#10;[&lt;TwoCall: void m()&gt;[8@L9] invokespecial temp$3.&lt;init&gt;(), &lt;C: void &lt;init&gt;()&gt;[0@L26] invokespecial %this.&lt;init&gt;()]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null&#10;[&lt;TwoCall: void m()&gt;[9@L9] temp$4 = invokevirtual a.id(temp$3), &lt;A: B id(B)&gt;[0@L15] temp$0 = invokevirtual %this._id(b)]:&lt;A: B _id(B)&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null&#10;[&lt;TwoCall: void m()&gt;[9@L9] temp$4 = invokevirtual a.id(temp$3), &lt;A: B id(B)&gt;[0@L15] temp$0 = invokevirtual %this._id(b)]:&lt;A: B _id(B)&gt;/p, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[1@L7] invokespecial temp$0.&lt;init&gt;()]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[4@L8] invokespecial temp$1.&lt;init&gt;()]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[5@L8] temp$2 = invokevirtual a.id(temp$1)]:&lt;A: B id(B)&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[5@L8] temp$2 = invokevirtual a.id(temp$1)]:&lt;A: B id(B)&gt;/b, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[5@L8] temp$2 = invokevirtual a.id(temp$1)]:&lt;A: B id(B)&gt;/temp$0, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[8@L9] invokespecial temp$3.&lt;init&gt;()]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[9@L9] temp$4 = invokevirtual a.id(temp$3)]:&lt;A: B id(B)&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[9@L9] temp$4 = invokevirtual a.id(temp$3)]:&lt;A: B id(B)&gt;/b, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[9@L9] temp$4 = invokevirtual a.id(temp$3)]:&lt;A: B id(B)&gt;/temp$0, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/a, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/b, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/c, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/temp$0, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/temp$1, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/temp$2, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/temp$3, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null&#10;[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/temp$4, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[&lt;C: void &lt;init&gt;()&gt;[0@L26] invokespecial %this.&lt;init&gt;(), &lt;B: void &lt;init&gt;()&gt;[0@L23] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null
[&lt;TwoCall: void m()&gt;[1@L7] invokespecial temp$0.&lt;init&gt;(), &lt;A: void &lt;init&gt;()&gt;[0@L13] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null
[&lt;TwoCall: void m()&gt;[4@L8] invokespecial temp$1.&lt;init&gt;(), &lt;B: void &lt;init&gt;()&gt;[0@L23] invokespecial %this.&lt;init&gt;()]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null
[&lt;TwoCall: void m()&gt;[5@L8] temp$2 = invokevirtual a.id(temp$1), &lt;A: B id(B)&gt;[0@L15] temp$0 = invokevirtual %this._id(b)]:&lt;A: B _id(B)&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null
[&lt;TwoCall: void m()&gt;[5@L8] temp$2 = invokevirtual a.id(temp$1), &lt;A: B id(B)&gt;[0@L15] temp$0 = invokevirtual %this._id(b)]:&lt;A: B _id(B)&gt;/p, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null
[&lt;TwoCall: void m()&gt;[8@L9] invokespecial temp$3.&lt;init&gt;(), &lt;C: void &lt;init&gt;()&gt;[0@L26] invokespecial %this.&lt;init&gt;()]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null
[&lt;TwoCall: void m()&gt;[9@L9] temp$4 = invokevirtual a.id(temp$3), &lt;A: B id(B)&gt;[0@L15] temp$0 = invokevirtual %this._id(b)]:&lt;A: B _id(B)&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null
[&lt;TwoCall: void m()&gt;[9@L9] temp$4 = invokevirtual a.id(temp$3), &lt;A: B id(B)&gt;[0@L15] temp$0 = invokevirtual %this._id(b)]:&lt;A: B _id(B)&gt;/p, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[1@L7] invokespecial temp$0.&lt;init&gt;()]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[4@L8] invokespecial temp$1.&lt;init&gt;()]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[5@L8] temp$2 = invokevirtual a.id(temp$1)]:&lt;A: B id(B)&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[5@L8] temp$2 = invokevirtual a.id(temp$1)]:&lt;A: B id(B)&gt;/b, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[5@L8] temp$2 = invokevirtual a.id(temp$1)]:&lt;A: B id(B)&gt;/temp$0, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[8@L9] invokespecial temp$3.&lt;init&gt;()]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[9@L9] temp$4 = invokevirtual a.id(temp$3)]:&lt;A: B id(B)&gt;/%this, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[9@L9] temp$4 = invokevirtual a.id(temp$3)]:&lt;A: B id(B)&gt;/b, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m(), &lt;TwoCall: void m()&gt;[9@L9] temp$4 = invokevirtual a.id(temp$3)]:&lt;A: B id(B)&gt;/temp$0, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/a, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/b, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/c, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/temp$0, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[0@L7] new A}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/temp$1, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/temp$2, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[3@L8] new B}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/temp$3, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null
[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:&lt;TwoCall: void m()&gt;/temp$4, expected: [[&lt;TwoCall: void main(java.lang.String[])&gt;[0@L3] invokestatic TwoCall.m()]:NewObj{&lt;TwoCall: void m()&gt;[7@L9] new C}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testTwoCall(CSPTATest.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testTwoType" classname="pascal.taie.analysis.pta.CSPTATest" time="2.097">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[A, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/%this, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[A, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null&#10;[A, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$1, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null&#10;[A, List]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/%this, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[A, List]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null&#10;[A, List]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[B, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/%this, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[B, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null&#10;[B, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$1, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null&#10;[B, List]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/%this, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[B, List]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null&#10;[B, List]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[TwoType, A]:&lt;List: Iterator iterator()&gt;/%this, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null&#10;[TwoType, A]:&lt;List: Iterator iterator()&gt;/temp$0, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[TwoType, A]:&lt;List: void &lt;init&gt;()&gt;/%this, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null&#10;[TwoType, A]:&lt;List: void add(java.lang.Object)&gt;/%this, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null&#10;[TwoType, A]:&lt;List: void add(java.lang.Object)&gt;/e, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null&#10;[TwoType, A]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null&#10;[TwoType, B]:&lt;List: Iterator iterator()&gt;/%this, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null&#10;[TwoType, B]:&lt;List: Iterator iterator()&gt;/temp$0, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[TwoType, B]:&lt;List: void &lt;init&gt;()&gt;/%this, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null&#10;[TwoType, B]:&lt;List: void add(java.lang.Object)&gt;/%this, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null&#10;[TwoType, B]:&lt;List: void add(java.lang.Object)&gt;/e, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null&#10;[TwoType, B]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}, [TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null&#10;[TwoType]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[0@L7] new A}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/%this, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[0@L7] new A}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/i1, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/i2, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/l1, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/l2, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/o1, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/o2, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/temp$1, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/temp$2, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/temp$3, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/temp$4, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/temp$5, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/temp$6, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[TwoType]:&lt;A: void a()&gt;/temp$7, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null&#10;[TwoType]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[3@L8] new B}], given: null&#10;[TwoType]:&lt;B: void b()&gt;/%this, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[3@L8] new B}], given: null&#10;[TwoType]:&lt;B: void b()&gt;/i3, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[TwoType]:&lt;B: void b()&gt;/l3, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null&#10;[TwoType]:&lt;B: void b()&gt;/o3, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null&#10;[TwoType]:&lt;B: void b()&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null&#10;[TwoType]:&lt;B: void b()&gt;/temp$1, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null&#10;[TwoType]:&lt;B: void b()&gt;/temp$2, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null&#10;[TwoType]:&lt;B: void b()&gt;/temp$3, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null&#10;[TwoType]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[0@L7] new A}, []:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[3@L8] new B}], given: null&#10;[]:&lt;TwoType: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[0@L7] new A}], given: null&#10;[]:&lt;TwoType: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[3@L8] new B}], given: null&#10;[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}.this$0, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null&#10;[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}.this$0, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null&#10;[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}.element, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null&#10;[TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}.element, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null&#10;[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}.element, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[A, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/%this, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[A, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null
[A, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$1, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null
[A, List]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/%this, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[A, List]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null
[A, List]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[B, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/%this, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[B, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null
[B, List]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$1, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null
[B, List]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/%this, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[B, List]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null
[B, List]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[TwoType, A]:&lt;List: Iterator iterator()&gt;/%this, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null
[TwoType, A]:&lt;List: Iterator iterator()&gt;/temp$0, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[TwoType, A]:&lt;List: void &lt;init&gt;()&gt;/%this, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null
[TwoType, A]:&lt;List: void add(java.lang.Object)&gt;/%this, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null
[TwoType, A]:&lt;List: void add(java.lang.Object)&gt;/e, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null
[TwoType, A]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null
[TwoType, B]:&lt;List: Iterator iterator()&gt;/%this, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null
[TwoType, B]:&lt;List: Iterator iterator()&gt;/temp$0, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[TwoType, B]:&lt;List: void &lt;init&gt;()&gt;/%this, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null
[TwoType, B]:&lt;List: void add(java.lang.Object)&gt;/%this, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null
[TwoType, B]:&lt;List: void add(java.lang.Object)&gt;/e, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null
[TwoType, B]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}, [TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null
[TwoType]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[0@L7] new A}], given: null
[TwoType]:&lt;A: void a()&gt;/%this, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[0@L7] new A}], given: null
[TwoType]:&lt;A: void a()&gt;/i1, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[TwoType]:&lt;A: void a()&gt;/i2, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[TwoType]:&lt;A: void a()&gt;/l1, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}], given: null
[TwoType]:&lt;A: void a()&gt;/l2, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null
[TwoType]:&lt;A: void a()&gt;/o1, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null
[TwoType]:&lt;A: void a()&gt;/o2, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null
[TwoType]:&lt;A: void a()&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}], given: null
[TwoType]:&lt;A: void a()&gt;/temp$1, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}], given: null
[TwoType]:&lt;A: void a()&gt;/temp$2, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null
[TwoType]:&lt;A: void a()&gt;/temp$3, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null
[TwoType]:&lt;A: void a()&gt;/temp$4, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[TwoType]:&lt;A: void a()&gt;/temp$5, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null
[TwoType]:&lt;A: void a()&gt;/temp$6, expected: [[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[TwoType]:&lt;A: void a()&gt;/temp$7, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null
[TwoType]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[3@L8] new B}], given: null
[TwoType]:&lt;B: void b()&gt;/%this, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[3@L8] new B}], given: null
[TwoType]:&lt;B: void b()&gt;/i3, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[TwoType]:&lt;B: void b()&gt;/l3, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null
[TwoType]:&lt;B: void b()&gt;/o3, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null
[TwoType]:&lt;B: void b()&gt;/temp$0, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null
[TwoType]:&lt;B: void b()&gt;/temp$1, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null
[TwoType]:&lt;B: void b()&gt;/temp$2, expected: [[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}], given: null
[TwoType]:&lt;B: void b()&gt;/temp$3, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null
[TwoType]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[0@L7] new A}, []:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[3@L8] new B}], given: null
[]:&lt;TwoType: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[0@L7] new A}], given: null
[]:&lt;TwoType: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;TwoType: void main(java.lang.String[])&gt;[3@L8] new B}], given: null
[A]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}.this$0, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}, [TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}], given: null
[B]:NewObj{&lt;List: Iterator iterator()&gt;[0@L44] new List$ListIterator}.this$0, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}], given: null
[TwoType]:NewObj{&lt;A: void a()&gt;[0@L14] new List}.element, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null
[TwoType]:NewObj{&lt;A: void a()&gt;[6@L16] new List}.element, expected: [[TwoType]:NewObj{&lt;A: void a()&gt;[3@L15] new java.lang.Object}, [TwoType]:NewObj{&lt;A: void a()&gt;[9@L17] new java.lang.Object}], given: null
[TwoType]:NewObj{&lt;B: void b()&gt;[0@L28] new List}.element, expected: [[TwoType]:NewObj{&lt;B: void b()&gt;[3@L29] new java.lang.Object}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testTwoType(CSPTATest.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testArray" classname="pascal.taie.analysis.pta.CSPTATest" time="2.161">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[2@L5] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[6@L6] new A}], given: null&#10;[]:&lt;Array: void arrayStore(java.lang.Object[],java.lang.Object)&gt;/a, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[13@L9] newarray (B)[%intconst0]}], given: null&#10;[]:&lt;Array: void arrayStore(java.lang.Object[],java.lang.Object)&gt;/o, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}], given: null&#10;[]:&lt;Array: void main(java.lang.String[])&gt;/a, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[2@L5] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[6@L6] new A}], given: null&#10;[]:&lt;Array: void main(java.lang.String[])&gt;/arr, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[1@L4] newarray (A)[%intconst0]}], given: null&#10;[]:&lt;Array: void main(java.lang.String[])&gt;/barr, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[13@L9] newarray (B)[%intconst0]}], given: null&#10;[]:&lt;Array: void main(java.lang.String[])&gt;/o, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}], given: null&#10;[]:&lt;Array: void main(java.lang.String[])&gt;/temp$2, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[2@L5] new A}], given: null&#10;[]:&lt;Array: void main(java.lang.String[])&gt;/temp$5, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[6@L6] new A}], given: null&#10;[]:&lt;Array: void main(java.lang.String[])&gt;/temp$8, expected: [], given: null&#10;[]:&lt;Array: void main(java.lang.String[])&gt;/temp$9, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}], given: null&#10;[]:&lt;java.lang.Object: int hashCode()&gt;/%native-ret, expected: [], given: null&#10;[]:&lt;java.lang.Object: int hashCode()&gt;/%native-this, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[1@L4] newarray (A)[%intconst0]}], given: null&#10;[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[2@L5] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[6@L6] new A}], given: null&#10;[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[13@L9] newarray (B)[%intconst0]}[*], expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}], given: null&#10;[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[1@L4] newarray (A)[%intconst0]}[*], expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[2@L5] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[6@L6] new A}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[2@L5] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[6@L6] new A}], given: null
[]:&lt;Array: void arrayStore(java.lang.Object[],java.lang.Object)&gt;/a, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[13@L9] newarray (B)[%intconst0]}], given: null
[]:&lt;Array: void arrayStore(java.lang.Object[],java.lang.Object)&gt;/o, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}], given: null
[]:&lt;Array: void main(java.lang.String[])&gt;/a, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[2@L5] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[6@L6] new A}], given: null
[]:&lt;Array: void main(java.lang.String[])&gt;/arr, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[1@L4] newarray (A)[%intconst0]}], given: null
[]:&lt;Array: void main(java.lang.String[])&gt;/barr, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[13@L9] newarray (B)[%intconst0]}], given: null
[]:&lt;Array: void main(java.lang.String[])&gt;/o, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}], given: null
[]:&lt;Array: void main(java.lang.String[])&gt;/temp$2, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[2@L5] new A}], given: null
[]:&lt;Array: void main(java.lang.String[])&gt;/temp$5, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[6@L6] new A}], given: null
[]:&lt;Array: void main(java.lang.String[])&gt;/temp$8, expected: [], given: null
[]:&lt;Array: void main(java.lang.String[])&gt;/temp$9, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}], given: null
[]:&lt;java.lang.Object: int hashCode()&gt;/%native-ret, expected: [], given: null
[]:&lt;java.lang.Object: int hashCode()&gt;/%native-this, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[1@L4] newarray (A)[%intconst0]}], given: null
[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[2@L5] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[6@L6] new A}], given: null
[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[13@L9] newarray (B)[%intconst0]}[*], expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[14@L10] new A}], given: null
[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[1@L4] newarray (A)[%intconst0]}[*], expected: [[]:NewObj{&lt;Array: void main(java.lang.String[])&gt;[2@L5] new A}, []:NewObj{&lt;Array: void main(java.lang.String[])&gt;[6@L6] new A}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testArray(CSPTATest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testCall" classname="pascal.taie.analysis.pta.CSPTATest" time="1.512">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[]:&lt;A: C foo(B,C)&gt;/%this, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;A: C foo(B,C)&gt;/b, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:&lt;A: C foo(B,C)&gt;/c, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null&#10;[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null&#10;[]:&lt;Call: void main(java.lang.String[])&gt;/a, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;Call: void main(java.lang.String[])&gt;/b, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:&lt;Call: void main(java.lang.String[])&gt;/c, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null&#10;[]:&lt;Call: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;Call: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[3@L5] new B}], given: null&#10;[]:&lt;Call: void main(java.lang.String[])&gt;/temp$2, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null&#10;[]:&lt;Call: void main(java.lang.String[])&gt;/temp$3, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null&#10;[]:&lt;Call: void main(java.lang.String[])&gt;/x, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null&#10;[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Call: void main(java.lang.String[])&gt;[3@L5] new B}, []:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[]:&lt;A: C foo(B,C)&gt;/%this, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;A: C foo(B,C)&gt;/b, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:&lt;A: C foo(B,C)&gt;/c, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null
[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null
[]:&lt;Call: void main(java.lang.String[])&gt;/a, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;Call: void main(java.lang.String[])&gt;/b, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:&lt;Call: void main(java.lang.String[])&gt;/c, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null
[]:&lt;Call: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;Call: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[3@L5] new B}], given: null
[]:&lt;Call: void main(java.lang.String[])&gt;/temp$2, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null
[]:&lt;Call: void main(java.lang.String[])&gt;/temp$3, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null
[]:&lt;Call: void main(java.lang.String[])&gt;/x, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null
[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Call: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Call: void main(java.lang.String[])&gt;[3@L5] new B}, []:NewObj{&lt;Call: void main(java.lang.String[])&gt;[6@L6] new C}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testCall(CSPTATest.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testStaticField" classname="pascal.taie.analysis.pta.CSPTATest" time="1.956">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;StaticField: void main(java.lang.String[])&gt;[0@L4] new B}], given: null&#10;[]:&lt;StaticField: void main(java.lang.String[])&gt;/b, expected: [[]:NewObj{&lt;StaticField: void main(java.lang.String[])&gt;[0@L4] new B}], given: null&#10;[]:&lt;StaticField: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;StaticField: void main(java.lang.String[])&gt;[0@L4] new B}], given: null&#10;[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;StaticField: void main(java.lang.String[])&gt;[0@L4] new B}], given: null&#10;&lt;A: B b&gt;, expected: [[]:NewObj{&lt;StaticField: void main(java.lang.String[])&gt;[0@L4] new B}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;StaticField: void main(java.lang.String[])&gt;[0@L4] new B}], given: null
[]:&lt;StaticField: void main(java.lang.String[])&gt;/b, expected: [[]:NewObj{&lt;StaticField: void main(java.lang.String[])&gt;[0@L4] new B}], given: null
[]:&lt;StaticField: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;StaticField: void main(java.lang.String[])&gt;[0@L4] new B}], given: null
[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;StaticField: void main(java.lang.String[])&gt;[0@L4] new B}], given: null
&lt;A: B b&gt;, expected: [[]:NewObj{&lt;StaticField: void main(java.lang.String[])&gt;[0@L4] new B}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testStaticField(CSPTATest.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testTwoObject" classname="pascal.taie.analysis.pta.CSPTATest" time="1.561">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$1, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/temp$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;List: Iterator iterator()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;List: Iterator iterator()&gt;/temp$0, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;List: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;List: void add(java.lang.Object)&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;List: void add(java.lang.Object)&gt;/e, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$1, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/temp$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;List: Iterator iterator()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;List: Iterator iterator()&gt;/temp$0, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;List: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;List: void add(java.lang.Object)&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;List: void add(java.lang.Object)&gt;/e, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/i1, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/i2, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/l1, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/l2, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/o1, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/o2, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/temp$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/temp$1, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/temp$2, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/temp$3, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/temp$4, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/temp$5, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/temp$6, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null&#10;[]:&lt;TwoObject: void m()&gt;/temp$7, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}.this$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null&#10;[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}.this$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null&#10;[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}.element, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null&#10;[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}.element, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$1, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/temp$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;List: Iterator iterator()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;List: Iterator iterator()&gt;/temp$0, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;List: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;List: void add(java.lang.Object)&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;List: void add(java.lang.Object)&gt;/e, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: java.lang.Object next()&gt;/temp$1, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;List$ListIterator: void &lt;init&gt;(List)&gt;/temp$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}, NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;List: Iterator iterator()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;List: Iterator iterator()&gt;/temp$0, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;List: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;List: void add(java.lang.Object)&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;List: void add(java.lang.Object)&gt;/e, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null
[]:&lt;TwoObject: void m()&gt;/i1, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[]:&lt;TwoObject: void m()&gt;/i2, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[]:&lt;TwoObject: void m()&gt;/l1, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null
[]:&lt;TwoObject: void m()&gt;/l2, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null
[]:&lt;TwoObject: void m()&gt;/o1, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null
[]:&lt;TwoObject: void m()&gt;/o2, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null
[]:&lt;TwoObject: void m()&gt;/temp$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null
[]:&lt;TwoObject: void m()&gt;/temp$1, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null
[]:&lt;TwoObject: void m()&gt;/temp$2, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null
[]:&lt;TwoObject: void m()&gt;/temp$3, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null
[]:&lt;TwoObject: void m()&gt;/temp$4, expected: [[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[]:&lt;TwoObject: void m()&gt;/temp$5, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null
[]:&lt;TwoObject: void m()&gt;/temp$6, expected: [[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}], given: null
[]:&lt;TwoObject: void m()&gt;/temp$7, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}.this$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}], given: null
[NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}]:NewObj{&lt;List: Iterator iterator()&gt;[0@L31] new List$ListIterator}.this$0, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}], given: null
[]:NewObj{&lt;TwoObject: void m()&gt;[0@L11] new List}.element, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[3@L12] new java.lang.Object}], given: null
[]:NewObj{&lt;TwoObject: void m()&gt;[6@L13] new List}.element, expected: [[]:NewObj{&lt;TwoObject: void m()&gt;[9@L14] new java.lang.Object}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testTwoObject(CSPTATest.java:69)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testInstanceField" classname="pascal.taie.analysis.pta.CSPTATest" time="1.873">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void callField()&gt;[0@L31] new A}, []:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}, []:NewObj{&lt;A: void longAP()&gt;[0@L15] new A}, []:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;A: void callField()&gt;/%this, expected: [[]:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;A: void callField()&gt;/a, expected: [[]:NewObj{&lt;A: void callField()&gt;[0@L31] new A}], given: null&#10;[]:&lt;A: void callField()&gt;/b, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}], given: null&#10;[]:&lt;A: void callField()&gt;/c, expected: [[]:NewObj{&lt;B: C foo()&gt;[0@L43] new C}], given: null&#10;[]:&lt;A: void callField()&gt;/temp$0, expected: [[]:NewObj{&lt;A: void callField()&gt;[0@L31] new A}], given: null&#10;[]:&lt;A: void callField()&gt;/temp$1, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}], given: null&#10;[]:&lt;A: void callField()&gt;/temp$2, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}], given: null&#10;[]:&lt;A: void callField()&gt;/temp$3, expected: [[]:NewObj{&lt;B: C foo()&gt;[0@L43] new C}], given: null&#10;[]:&lt;A: void cycle()&gt;/%this, expected: [[]:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;A: void cycle()&gt;/a, expected: [[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}], given: null&#10;[]:&lt;A: void cycle()&gt;/b, expected: [[]:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}], given: null&#10;[]:&lt;A: void cycle()&gt;/temp$0, expected: [[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}], given: null&#10;[]:&lt;A: void cycle()&gt;/temp$1, expected: [[]:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}], given: null&#10;[]:&lt;A: void cycle()&gt;/temp$2, expected: [[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}], given: null&#10;[]:&lt;A: void cycle()&gt;/temp$3, expected: [[]:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}], given: null&#10;[]:&lt;A: void cycle()&gt;/x, expected: [[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}], given: null&#10;[]:&lt;A: void longAP()&gt;/%this, expected: [[]:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;A: void longAP()&gt;/a, expected: [[]:NewObj{&lt;A: void longAP()&gt;[0@L15] new A}], given: null&#10;[]:&lt;A: void longAP()&gt;/temp$0, expected: [[]:NewObj{&lt;A: void longAP()&gt;[0@L15] new A}], given: null&#10;[]:&lt;A: void longAP()&gt;/temp$1, expected: [[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null&#10;[]:&lt;A: void longAP()&gt;/temp$2, expected: [[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null&#10;[]:&lt;A: void longAP()&gt;/temp$3, expected: [[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}], given: null&#10;[]:&lt;A: void longAP()&gt;/temp$4, expected: [[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null&#10;[]:&lt;A: void longAP()&gt;/temp$5, expected: [[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}], given: null&#10;[]:&lt;A: void longAP()&gt;/temp$6, expected: [[]:NewObj{&lt;A: void longAP()&gt;[12@L18] new D}], given: null&#10;[]:&lt;A: void longAP()&gt;/temp$7, expected: [[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null&#10;[]:&lt;A: void longAP()&gt;/temp$8, expected: [[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}], given: null&#10;[]:&lt;A: void longAP()&gt;/x, expected: [[]:NewObj{&lt;A: void longAP()&gt;[12@L18] new D}], given: null&#10;[]:&lt;B: C foo()&gt;/%this, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}], given: null&#10;[]:&lt;B: C foo()&gt;/temp$0, expected: [[]:NewObj{&lt;B: C foo()&gt;[0@L43] new C}], given: null&#10;[]:&lt;B: C foo()&gt;/x, expected: [[]:NewObj{&lt;B: C foo()&gt;[0@L43] new C}], given: null&#10;[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}, []:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}, []:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null&#10;[]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}, []:NewObj{&lt;B: C foo()&gt;[0@L43] new C}], given: null&#10;[]:&lt;D: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void longAP()&gt;[12@L18] new D}], given: null&#10;[]:&lt;InstanceField: void main(java.lang.String[])&gt;/a, expected: [[]:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;InstanceField: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void callField()&gt;[0@L31] new A}, []:NewObj{&lt;A: void callField()&gt;[3@L32] new B}, []:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}, []:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}, []:NewObj{&lt;A: void longAP()&gt;[0@L15] new A}, []:NewObj{&lt;A: void longAP()&gt;[12@L18] new D}, []:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}, []:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}, []:NewObj{&lt;B: C foo()&gt;[0@L43] new C}, []:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:NewObj{&lt;A: void callField()&gt;[0@L31] new A}.b, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}], given: null&#10;[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}.b, expected: [[]:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}], given: null&#10;[]:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}.a, expected: [[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}], given: null&#10;[]:NewObj{&lt;A: void longAP()&gt;[0@L15] new A}.b, expected: [[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null&#10;[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}.c, expected: [[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}], given: null&#10;[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}.d, expected: [[]:NewObj{&lt;A: void longAP()&gt;[12@L18] new D}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void callField()&gt;[0@L31] new A}, []:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}, []:NewObj{&lt;A: void longAP()&gt;[0@L15] new A}, []:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;A: void callField()&gt;/%this, expected: [[]:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;A: void callField()&gt;/a, expected: [[]:NewObj{&lt;A: void callField()&gt;[0@L31] new A}], given: null
[]:&lt;A: void callField()&gt;/b, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}], given: null
[]:&lt;A: void callField()&gt;/c, expected: [[]:NewObj{&lt;B: C foo()&gt;[0@L43] new C}], given: null
[]:&lt;A: void callField()&gt;/temp$0, expected: [[]:NewObj{&lt;A: void callField()&gt;[0@L31] new A}], given: null
[]:&lt;A: void callField()&gt;/temp$1, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}], given: null
[]:&lt;A: void callField()&gt;/temp$2, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}], given: null
[]:&lt;A: void callField()&gt;/temp$3, expected: [[]:NewObj{&lt;B: C foo()&gt;[0@L43] new C}], given: null
[]:&lt;A: void cycle()&gt;/%this, expected: [[]:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;A: void cycle()&gt;/a, expected: [[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}], given: null
[]:&lt;A: void cycle()&gt;/b, expected: [[]:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}], given: null
[]:&lt;A: void cycle()&gt;/temp$0, expected: [[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}], given: null
[]:&lt;A: void cycle()&gt;/temp$1, expected: [[]:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}], given: null
[]:&lt;A: void cycle()&gt;/temp$2, expected: [[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}], given: null
[]:&lt;A: void cycle()&gt;/temp$3, expected: [[]:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}], given: null
[]:&lt;A: void cycle()&gt;/x, expected: [[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}], given: null
[]:&lt;A: void longAP()&gt;/%this, expected: [[]:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;A: void longAP()&gt;/a, expected: [[]:NewObj{&lt;A: void longAP()&gt;[0@L15] new A}], given: null
[]:&lt;A: void longAP()&gt;/temp$0, expected: [[]:NewObj{&lt;A: void longAP()&gt;[0@L15] new A}], given: null
[]:&lt;A: void longAP()&gt;/temp$1, expected: [[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null
[]:&lt;A: void longAP()&gt;/temp$2, expected: [[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null
[]:&lt;A: void longAP()&gt;/temp$3, expected: [[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}], given: null
[]:&lt;A: void longAP()&gt;/temp$4, expected: [[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null
[]:&lt;A: void longAP()&gt;/temp$5, expected: [[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}], given: null
[]:&lt;A: void longAP()&gt;/temp$6, expected: [[]:NewObj{&lt;A: void longAP()&gt;[12@L18] new D}], given: null
[]:&lt;A: void longAP()&gt;/temp$7, expected: [[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null
[]:&lt;A: void longAP()&gt;/temp$8, expected: [[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}], given: null
[]:&lt;A: void longAP()&gt;/x, expected: [[]:NewObj{&lt;A: void longAP()&gt;[12@L18] new D}], given: null
[]:&lt;B: C foo()&gt;/%this, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}], given: null
[]:&lt;B: C foo()&gt;/temp$0, expected: [[]:NewObj{&lt;B: C foo()&gt;[0@L43] new C}], given: null
[]:&lt;B: C foo()&gt;/x, expected: [[]:NewObj{&lt;B: C foo()&gt;[0@L43] new C}], given: null
[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}, []:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}, []:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null
[]:&lt;C: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}, []:NewObj{&lt;B: C foo()&gt;[0@L43] new C}], given: null
[]:&lt;D: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void longAP()&gt;[12@L18] new D}], given: null
[]:&lt;InstanceField: void main(java.lang.String[])&gt;/a, expected: [[]:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;InstanceField: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;A: void callField()&gt;[0@L31] new A}, []:NewObj{&lt;A: void callField()&gt;[3@L32] new B}, []:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}, []:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}, []:NewObj{&lt;A: void longAP()&gt;[0@L15] new A}, []:NewObj{&lt;A: void longAP()&gt;[12@L18] new D}, []:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}, []:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}, []:NewObj{&lt;B: C foo()&gt;[0@L43] new C}, []:NewObj{&lt;InstanceField: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:NewObj{&lt;A: void callField()&gt;[0@L31] new A}.b, expected: [[]:NewObj{&lt;A: void callField()&gt;[3@L32] new B}], given: null
[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}.b, expected: [[]:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}], given: null
[]:NewObj{&lt;A: void cycle()&gt;[3@L24] new B}.a, expected: [[]:NewObj{&lt;A: void cycle()&gt;[0@L23] new A}], given: null
[]:NewObj{&lt;A: void longAP()&gt;[0@L15] new A}.b, expected: [[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}], given: null
[]:NewObj{&lt;A: void longAP()&gt;[3@L16] new B}.c, expected: [[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}], given: null
[]:NewObj{&lt;A: void longAP()&gt;[7@L17] new C}.d, expected: [[]:NewObj{&lt;A: void longAP()&gt;[12@L18] new D}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testInstanceField(CSPTATest.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testAssign" classname="pascal.taie.analysis.pta.CSPTATest" time="1.789">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null&#10;[]:&lt;Assign: void main(java.lang.String[])&gt;/a1, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null&#10;[]:&lt;Assign: void main(java.lang.String[])&gt;/a2, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null&#10;[]:&lt;Assign: void main(java.lang.String[])&gt;/a3, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null&#10;[]:&lt;Assign: void main(java.lang.String[])&gt;/b, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null&#10;[]:&lt;Assign: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}], given: null&#10;[]:&lt;Assign: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null&#10;[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null&#10;[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null
[]:&lt;Assign: void main(java.lang.String[])&gt;/a1, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null
[]:&lt;Assign: void main(java.lang.String[])&gt;/a2, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null
[]:&lt;Assign: void main(java.lang.String[])&gt;/a3, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null
[]:&lt;Assign: void main(java.lang.String[])&gt;/b, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null
[]:&lt;Assign: void main(java.lang.String[])&gt;/temp$0, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}], given: null
[]:&lt;Assign: void main(java.lang.String[])&gt;/temp$1, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null
[]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null
[]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[0@L4] new A}, []:NewObj{&lt;Assign: void main(java.lang.String[])&gt;[5@L7] new B}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testAssign(CSPTATest.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <testcase name="testOneObject" classname="pascal.taie.analysis.pta.CSPTATest" time="1.515">
    <failure message="pascal.taie.util.AnalysisException: Mismatches of points-to set&#10;[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: B get()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: B get()&gt;/temp$0, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: void doSet(B)&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: void doSet(B)&gt;/p, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: void set(B)&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: void set(B)&gt;/b, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;A: void doSet(B)&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;A: void doSet(B)&gt;/p, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;A: void set(B)&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;A: void set(B)&gt;/b, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null&#10;[NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null&#10;[]:&lt;OneObject: void m()&gt;/a1, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null&#10;[]:&lt;OneObject: void m()&gt;/a2, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null&#10;[]:&lt;OneObject: void m()&gt;/b1, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null&#10;[]:&lt;OneObject: void m()&gt;/b2, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null&#10;[]:&lt;OneObject: void m()&gt;/temp$0, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null&#10;[]:&lt;OneObject: void m()&gt;/temp$1, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null&#10;[]:&lt;OneObject: void m()&gt;/temp$2, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null&#10;[]:&lt;OneObject: void m()&gt;/temp$3, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null&#10;[]:&lt;OneObject: void m()&gt;/temp$4, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null&#10;[]:&lt;OneObject: void m()&gt;/x, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null&#10;[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}.f, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null&#10;[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}.f, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null" type="pascal.taie.util.AnalysisException">pascal.taie.util.AnalysisException: Mismatches of points-to set
[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: B get()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null
[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: B get()&gt;/temp$0, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null
[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null
[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: void doSet(B)&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null
[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: void doSet(B)&gt;/p, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null
[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: void set(B)&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null
[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;A: void set(B)&gt;/b, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null
[NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null
[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;A: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null
[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;A: void doSet(B)&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null
[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;A: void doSet(B)&gt;/p, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null
[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;A: void set(B)&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null
[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;A: void set(B)&gt;/b, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null
[NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null
[NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null
[NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null
[NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}]:&lt;B: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null
[NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}]:&lt;java.lang.Object: void &lt;init&gt;()&gt;/%this, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null
[]:&lt;OneObject: void m()&gt;/a1, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null
[]:&lt;OneObject: void m()&gt;/a2, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null
[]:&lt;OneObject: void m()&gt;/b1, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null
[]:&lt;OneObject: void m()&gt;/b2, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null
[]:&lt;OneObject: void m()&gt;/temp$0, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}], given: null
[]:&lt;OneObject: void m()&gt;/temp$1, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}], given: null
[]:&lt;OneObject: void m()&gt;/temp$2, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null
[]:&lt;OneObject: void m()&gt;/temp$3, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null
[]:&lt;OneObject: void m()&gt;/temp$4, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null
[]:&lt;OneObject: void m()&gt;/x, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null
[]:NewObj{&lt;OneObject: void m()&gt;[0@L7] new A}.f, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[6@L9] new B}], given: null
[]:NewObj{&lt;OneObject: void m()&gt;[3@L8] new A}.f, expected: [[]:NewObj{&lt;OneObject: void m()&gt;[9@L10] new B}], given: null
	at pascal.taie.analysis.pta.plugin.ResultProcessor.comparePointsToSet(ResultProcessor.java:174)
	at pascal.taie.analysis.pta.plugin.ResultProcessor.process(ResultProcessor.java:72)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:48)
	at pascal.taie.analysis.pta.cs.CSPTA.analyze(CSPTA.java:32)
	at pascal.taie.analysis.AnalysisManager.runInterproceduralAnalysis(AnalysisManager.java:124)
	at pascal.taie.analysis.AnalysisManager.runAnalysis(AnalysisManager.java:62)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$0(AnalysisManager.java:49)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.analysis.AnalysisManager.lambda$execute$1(AnalysisManager.java:48)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at pascal.taie.analysis.AnalysisManager.execute(AnalysisManager.java:48)
	at pascal.taie.Main.executePlan(Main.java:128)
	at pascal.taie.Main.lambda$main$0(Main.java:46)
	at pascal.taie.util.Timer.lambda$runAndCount$0(Timer.java:102)
	at pascal.taie.util.Timer.runAndCount(Timer.java:83)
	at pascal.taie.util.Timer.runAndCount(Timer.java:101)
	at pascal.taie.util.Timer.runAndCount(Timer.java:97)
	at pascal.taie.Main.main(Main.java:38)
	at pascal.taie.analysis.Tests.testPTA(Tests.java:59)
	at pascal.taie.analysis.pta.CSPTATest.testOneObject(CSPTATest.java:54)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:829)
</failure>
  </testcase>
  <system-out><![CDATA[Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9162 classes with 89829 methods in the world
WorldBuilder finishes, elapsed time: 3.37s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\StoreLoad-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9165 classes with 89837 methods in the world
WorldBuilder finishes, elapsed time: 1.75s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\OneCall-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9164 classes with 89835 methods in the world
WorldBuilder finishes, elapsed time: 1.55s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\OneType-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9163 classes with 89830 methods in the world
WorldBuilder finishes, elapsed time: 1.63s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\New-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9163 classes with 89833 methods in the world
WorldBuilder finishes, elapsed time: 1.63s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\TwoCall-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9165 classes with 89837 methods in the world
WorldBuilder finishes, elapsed time: 1.90s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\TwoType-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9162 classes with 89830 methods in the world
WorldBuilder finishes, elapsed time: 1.99s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\Array-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9163 classes with 89831 methods in the world
WorldBuilder finishes, elapsed time: 1.50s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\Call-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9162 classes with 89829 methods in the world
WorldBuilder finishes, elapsed time: 1.95s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\StaticField-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9163 classes with 89834 methods in the world
WorldBuilder finishes, elapsed time: 1.53s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\TwoObject-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9164 classes with 89835 methods in the world
WorldBuilder finishes, elapsed time: 1.70s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\InstanceField-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9162 classes with 89829 methods in the world
WorldBuilder finishes, elapsed time: 1.78s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\Assign-expected.txt ...
Tai-e starts ...
Writing options to output\options.yml
Writing analysis plan to output\tai-e-plan.yml
WorldBuilder starts ...
9162 classes with 89833 methods in the world
WorldBuilder finishes, elapsed time: 1.49s
cspta starts ...
-------------- Pointer analysis statistics: --------------
#var pointers:                0 (insens) / 0 (sens)
#var points-to:               0 (insens) / 0 (sens)
#static field points-to:      0 (sens)
#instance field points-to:    0 (sens)
#array points-to:             0 (sens)
#reachable methods:           0 (insens) / 0 (sens)
#call graph edges:            0 (insens) / 0 (sens)
----------------------------------------
Comparing points-to set with src\test\resources\pta\cspta\OneObject-expected.txt ...
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
